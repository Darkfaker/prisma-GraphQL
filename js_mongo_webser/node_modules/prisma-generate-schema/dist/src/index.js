"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utilities_1 = require("graphql/utilities");
var datamodel_1 = require("./datamodel");
var databaseType_1 = require("./databaseType");
exports.DatabaseType = databaseType_1.DatabaseType;
var generator_1 = require("./generator");
/**
 * Computes the internal type representation for a model.
 * @param model The model in SDL as string.
 * @param databaseType: The database type implementation to use.
 * @returns An array of all types present in the model.
 */
function parseInternalTypes(model, databaseType) {
    return datamodel_1.default.create(databaseType).parseFromSchemaString(model);
}
exports.parseInternalTypes = parseInternalTypes;
/**
 * Computes a prisma OpenCRUD schema for a given model.
 * @param model The model in SDL as string.
 * @param databaseType: The database type implementation to use.
 * @returns The OpenCRUD schema as graphql-js schema object for the given model.
 */
function generateCRUDSchema(model, databaseType) {
    var types = parseInternalTypes(model, databaseType);
    return generator_1.default.create(databaseType).schema.generate(types, {});
}
exports.generateCRUDSchema = generateCRUDSchema;
/**
 * Computes a prisma OpenCRUD schema for a given model.
 * @param model The model in SDL as string.
 * @param databaseType: The database type implementation to use.
 * @returns The OpenCRUD schema as prettified string for the given model.
 */
function generateCRUDSchemaString(model, databaseType) {
    if (databaseType === void 0) { databaseType = databaseType_1.DatabaseType.relational; }
    return utilities_1.printSchema(generateCRUDSchema(model, databaseType));
}
exports.default = generateCRUDSchemaString;
//# sourceMappingURL=index.js.map