"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var documentParser_1 = require("../../src/datamodel/documentParser");
var helpers_1 = require("./helpers");
describe("Document parser specific tests", function () {
    test('Mark an ID field correctly.', function () {
        var model = "\n      type User {\n        email: String! @id\n        anotherInt: Int! @default(value: 10)\n      }\n    ";
        var types = new documentParser_1.default().parseFromSchemaString(model);
        var userType = helpers_1.expectType(types, 'User');
        helpers_1.expectField(userType, 'email', true, false, 'String', true, true, null);
    });
    test('Mark an read only fields correctly.', function () {
        var model = "\n      type User {\n        email: String! @id\n        anotherInt: Int! @default(value: 10)\n        wasCreatedAt: Date! @createdAt\n        wasUpdatedAt: Date! @updatedAt\n      }\n    ";
        var types = new documentParser_1.default().parseFromSchemaString(model);
        var userType = helpers_1.expectType(types, 'User');
        helpers_1.expectField(userType, 'email', true, false, 'String', true, true, null);
        helpers_1.expectField(userType, 'wasCreatedAt', true, false, 'Date', false, true, null);
        helpers_1.expectField(userType, 'wasUpdatedAt', true, false, 'Date', false, true, null);
    });
    test('Mark an embedded types correctly.', function () {
        var model = "\n      type User @embedded {\n        email: String! @id\n      }\n    ";
        var types = new documentParser_1.default().parseFromSchemaString(model);
        var userType = helpers_1.expectType(types, 'User', false, true);
    });
});
//# sourceMappingURL=document.js.map